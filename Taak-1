1.Zomato Dataset Analysis and Visualization
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

2.Load dataset
# Note: If you still encounter 'unexpected end of data', please verify the integrity of the 'zomato.csv' file.
try:
    df = pd.read_csv("zomato.csv", encoding='latin-1', engine='python')

    3.Clean Data
    df.drop_duplicates(inplace=True)
    df.dropna(inplace=True)
    if 'url' in df.columns and 'phone' in df.columns:
        df.drop(['url', 'phone'], axis=1, inplace=True)

    4.Basic Info
    print("Columns:", df.columns.tolist())
    print(df.info())
    print(df.describe())

    5.Top 10 Cuisines
    plt.figure(figsize=(10, 6))
    top_cuisines = df['cuisines'].value_counts().head(10)
    sns.barplot(x=top_cuisines.values, y=top_cuisines.index)
    plt.title("Top 10 Cuisines")
    plt.xlabel("Number of Restaurants")
    plt.ylabel("Cuisine")
    plt.tight_layout()
    plt.show()

    6.Top 10 Locations
    plt.figure(figsize=(10, 6))
    top_locations = df['location'].value_counts().head(10)
    sns.barplot(x=top_locations.values, y=top_locations.index, palette='viridis')
    plt.title("Top 10 Locations with Most Restaurants")
    plt.xlabel("Number of Restaurants")
    plt.ylabel("Location")
    plt.tight_layout()
    plt.show()

    7.Rating Distribution
    plt.figure(figsize=(8, 5))
    sns.histplot(df['aggregate_rating'], bins=20, kde=True, color='skyblue')
    plt.title("Distribution of Ratings")
    plt.xlabel("Rating")
    plt.ylabel("Count")
    plt.tight_layout()
    plt.show()

    8.Average Cost by City (if available)
    if 'city' in df.columns:
        plt.figure(figsize=(12, 6))
        avg_cost = df.groupby('city')['average_cost_for_two'].mean().sort_values(ascending=False).head(10)
        sns.barplot(x=avg_cost.values, y=avg_cost.index, palette='coolwarm')
        plt.title("Top 10 Cities by Average Cost for Two")
        plt.xlabel("Average Cost")
        plt.ylabel("City")
        plt.tight_layout()
        plt.show()

    9.Online Order vs Book Table
    if 'online_order' in df.columns:
        sns.countplot(x='online_order', data=df)
        plt.title("Online Order Availability")
        plt.show()

    if 'book_table' in df.columns:
        sns.countplot(x='book_table', data=df)
        plt.title("Table Booking Availability")
        plt.show()

    10.Correlation Heatmap
    plt.figure(figsize=(10, 6))
    numeric_df = df.select_dtypes(include=[np.number])
    sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm')
    plt.title("Correlation Heatmap")
    plt.tight_layout()
    plt.show()

except Exception as e:
    print(f"An error occurred: {e}")
